# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'exercice8.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import gurobipy as gp
import pandas as pd


class Ui_MainWindow(object):

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 600)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(30, 10, 121, 61))
        font = QtGui.QFont()
        font.setPointSize(25)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(40, 80, 55, 16))
        self.label_2.setObjectName("label_2")
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(40, 110, 141, 16))
        self.label_3.setObjectName("label_3")
        self.label_4 = QtWidgets.QLabel(self.centralwidget)
        self.label_4.setGeometry(QtCore.QRect(40, 140, 181, 16))
        self.label_4.setObjectName("label_4")
        self.label_5 = QtWidgets.QLabel(self.centralwidget)
        self.label_5.setGeometry(QtCore.QRect(40, 170, 211, 16))
        self.label_5.setObjectName("label_5")
        self.label_6 = QtWidgets.QLabel(self.centralwidget)
        self.label_6.setGeometry(QtCore.QRect(40, 200, 151, 16))
        self.label_6.setObjectName("label_6")
        self.label_7 = QtWidgets.QLabel(self.centralwidget)
        self.label_7.setGeometry(QtCore.QRect(40, 230, 171, 16))
        self.label_7.setObjectName("label_7")
        self.label_8 = QtWidgets.QLabel(self.centralwidget)
        self.label_8.setGeometry(QtCore.QRect(40, 260, 201, 16))
        self.label_8.setObjectName("label_8")
        self.label_9 = QtWidgets.QLabel(self.centralwidget)
        self.label_9.setGeometry(QtCore.QRect(40, 320, 171, 16))
        self.label_9.setObjectName("label_9")
        self.label_10 = QtWidgets.QLabel(self.centralwidget)
        self.label_10.setGeometry(QtCore.QRect(40, 350, 191, 16))
        self.label_10.setObjectName("label_10")
        self.label_11 = QtWidgets.QLabel(self.centralwidget)
        self.label_11.setGeometry(QtCore.QRect(40, 410, 71, 16))
        self.label_11.setObjectName("label_11")
        self.label_12 = QtWidgets.QLabel(self.centralwidget)
        self.label_12.setGeometry(QtCore.QRect(40, 290, 211, 16))
        self.label_12.setObjectName("label_12")
        self.label_13 = QtWidgets.QLabel(self.centralwidget)
        self.label_13.setGeometry(QtCore.QRect(40, 380, 131, 16))
        self.label_13.setObjectName("label_13")
        self.lineEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit.setGeometry(QtCore.QRect(250, 80, 113, 22))
        self.lineEdit.setObjectName("lineEdit")
        self.lineEdit_2 = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_2.setGeometry(QtCore.QRect(250, 110, 113, 22))
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.lineEdit_3 = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_3.setGeometry(QtCore.QRect(250, 140, 113, 22))
        self.lineEdit_3.setObjectName("lineEdit_3")
        self.lineEdit_4 = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_4.setGeometry(QtCore.QRect(250, 170, 113, 22))
        self.lineEdit_4.setObjectName("lineEdit_4")
        self.lineEdit_5 = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_5.setGeometry(QtCore.QRect(250, 200, 113, 22))
        self.lineEdit_5.setObjectName("lineEdit_5")
        self.lineEdit_6 = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_6.setGeometry(QtCore.QRect(250, 350, 113, 22))
        self.lineEdit_6.setObjectName("lineEdit_6")
        self.lineEdit_7 = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_7.setGeometry(QtCore.QRect(250, 260, 113, 22))
        self.lineEdit_7.setObjectName("lineEdit_7")
        self.lineEdit_8 = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_8.setGeometry(QtCore.QRect(250, 290, 113, 22))
        self.lineEdit_8.setObjectName("lineEdit_8")
        self.lineEdit_9 = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_9.setGeometry(QtCore.QRect(250, 230, 113, 22))
        self.lineEdit_9.setObjectName("lineEdit_9")
        self.lineEdit_10 = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_10.setGeometry(QtCore.QRect(250, 320, 113, 22))
        self.lineEdit_10.setObjectName("lineEdit_10")
        self.lineEdit_11 = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_11.setGeometry(QtCore.QRect(250, 410, 113, 22))
        self.lineEdit_11.setObjectName("lineEdit_11")
        self.lineEdit_12 = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_12.setGeometry(QtCore.QRect(250, 380, 113, 22))
        self.lineEdit_12.setObjectName("lineEdit_12")
        self.lineEdit_13 = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_13.setGeometry(QtCore.QRect(380, 380, 113, 22))
        self.lineEdit_13.setObjectName("lineEdit_13")
        self.lineEdit_14 = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_14.setGeometry(QtCore.QRect(510, 380, 113, 22))
        self.lineEdit_14.setObjectName("lineEdit_14")
        self.lineEdit_15 = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_15.setGeometry(QtCore.QRect(640, 380, 113, 22))
        self.lineEdit_15.setObjectName("lineEdit_15")
        self.resoudre1 = QtWidgets.QPushButton(self.centralwidget)
        self.resoudre1.clicked.connect(self.pl4)
        self.resoudre1.setGeometry(QtCore.QRect(660, 80, 93, 291))
        self.resoudre1.setObjectName("resoudre1")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 26))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.label.setText(_translate("MainWindow", "PL 4:"))
        self.label_2.setText(_translate("MainWindow", "nb_mois"))
        self.label_3.setText(_translate("MainWindow", "nb_ouvriers_initiaux"))
        self.label_4.setText(_translate("MainWindow", "nb_heures_travail_par_ouvrier"))
        self.label_5.setText(_translate("MainWindow", "nb_heures_max_supplementaires"))
        self.label_6.setText(_translate("MainWindow", "cout_recrutement_ouvrier"))
        self.label_7.setText(_translate("MainWindow", "cout_licenciement_ouvrier"))
        self.label_8.setText(_translate("MainWindow", "cout_stockage_paire_chaussure"))
        self.label_9.setText(_translate("MainWindow", "cout_mat_paire_chaussure "))
        self.label_10.setText(_translate("MainWindow", "heures_travail_paire_chaussure"))
        self.label_11.setText(_translate("MainWindow", "stock_initial"))
        self.label_12.setText(_translate("MainWindow", "cout_heure_supplementaire_ouvrier"))
        self.label_13.setText(_translate("MainWindow", "demande_par_mois"))
        self.resoudre1.setText(_translate("MainWindow", "Résoudre"))

    def pl4(self):
        # Initialisation des paramètres du problème
        nb_mois = int(self.lineEdit.text())
        nb_ouvriers_initiaux = int(self.lineEdit_2.text())
        nb_heures_travail_par_ouvrier = int(self.lineEdit_3.text())
        nb_heures_max_supplementaires = int(self.lineEdit_4.text())
        cout_recrutement_ouvrier = int(self.lineEdit_5.text())
        cout_licenciement_ouvrier = int(self.lineEdit_9.text())
        cout_stockage_paire_chaussure = int(self.lineEdit_7.text())
        cout_heure_supplementaire_ouvrier = int(self.lineEdit_8.text())
        cout_mat_paire_chaussure = int(self.lineEdit_10.text())
        heures_travail_paire_chaussure = int(self.lineEdit_6.text())
        demande_par_mois = [int(self.lineEdit_12.text()), int(self.lineEdit_13.text()), int(self.lineEdit_14.text()), int(self.lineEdit_15.text())]
        stock_initial = int(self.lineEdit_11.text())

        # Initialisation du modèle
        model = gp.Model("ChausseTous")

        # Déclaration des variables
        x = {}
        y = {}
        for t in range(nb_mois):
            x[t] = model.addVar(vtype=gp.GRB.INTEGER, name="production_%s" % t)
            y[t] = model.addVar(vtype=gp.GRB.INTEGER, name="ouvriers_%s" % t)
            model.addConstr(x[t] >= demande_par_mois[t])
        # Fonction objective
        model.setObjective(
            gp.quicksum(y[t] * cout_recrutement_ouvrier for t in range(nb_mois) if y[t] > 0)
            + gp.quicksum(y[t] * cout_licenciement_ouvrier for t in range(nb_mois) if y[t] < 0)
            + gp.quicksum(
                x[t] * cout_mat_paire_chaussure + y[t] * nb_heures_travail_par_ouvrier * 1500
                + (x[t] * heures_travail_paire_chaussure - y[t] * nb_heures_travail_par_ouvrier,
                   nb_heures_max_supplementaires) * cout_heure_supplementaire_ouvrier
                + (stock_initial * cout_stockage_paire_chaussure)
                for t in range(nb_mois)
            ),
            gp.GRB.MINIMIZE,
        )

        # Ajout des contraintes
        model.addConstr(y[0] == nb_ouvriers_initiaux)
        for t in range(1, nb_mois):
            model.addConstr(y[t] >= y[t - 1] - gp.ceil((nb_ouvriers_initiaux - y[0]) / 5))
            model.addConstr(y[t] <= y[t - 1] + gp.floor((y[0] - nb_ouvriers_initiaux) / 5))
        for t in range(nb_mois):
            model.addConstr(x[t] * heures_travail_paire_chaussure <= y[
                t] * nb_heures_travail_par_ouvrier + nb_heures_max_supplementaires)

        # Résolution
        model.optimize()
        # Affichage des résultats
        sheet = {}
        with open("Resolutions/PL4.txt", "w") as f:
            sys.stdout = f
            print("Plan de production optimal :")
            for t in range(nb_mois):
                print("Mois %s : %s" % (t + 1, int(x[t].x)))
                sheet.update({"Mois " + str(t): [x[t].x]})
            df = pd.DataFrame(sheet)
            df.to_excel("Resolution_excel/pl4.xlsx", index=False)


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
